{"ast":null,"code":"var _jsxFileName = \"C:\\\\novaCulture\\\\eunni\\\\src\\\\main\\\\resources\\\\static\\\\eunni\\\\src\\\\components\\\\SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles.css'; // 전역 CSS 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TERMS = [{\n  key: 'terms1',\n  label: '노바문화센터 이용약관 동의',\n  required: true,\n  content: '여러분을 환영합니다. 노바문화센터 서비스 및 제품(이하 “서비스”)을 이용해 주셔서 감사합니다. 본 약관은 다양한 노바문화센터 서비스의 이용과 관련하여 노바문화센터 서비스를 제공하는 노바문화센터 주식회사(이하 “노바문화센터”)와 이를 이용하는 “회원”과의 관계, 회원의 서비스 이용 절차, 권리·의무 및 책임사항 등을 규정합니다.'\n}, {\n  key: 'terms2',\n  label: '개인정보 수집 및 이용 동의',\n  required: true,\n  content: '개인정보보호법에 따라 회원가입 신청하시는 분께 수집하는 개인정보의 항목, 수집 및 이용목적, 보유 및 이용기간, 동의 거부권 및 동의 거부 시 불이익에 관한 사항을 안내 드립니다.'\n}, {\n  key: 'terms3',\n  label: '프로모션 정보 수신 동의',\n  required: false,\n  content: '노바문화센터에서 제공하는 이벤트/혜택 등 다양한 정보를 휴대전화(앱 알림 또는 문자), 이메일로 받아보실 수 있습니다. 일부 서비스(별도 회원 체계로 운영하거나 노바문화센터 가입 이후 추가 가입하여 이용하는 서비스 등)의 경우, 별도의 동의 후 서비스 이용이 가능합니다.'\n}];\nfunction SignupPage() {\n  _s();\n  // 회원가입 단계 관리: 'terms' -> 'verification' -> 'signup'\n  const [currentStep, setCurrentStep] = useState('terms');\n\n  // 약관 동의 처리\n  const [checked, setChecked] = useState({\n    terms1: false,\n    terms2: false,\n    terms3: false\n  });\n  const allRequiredChecked = TERMS.filter(t => t.required).every(t => checked[t.key]);\n  const allChecked = TERMS.every(t => checked[t.key]);\n  const handleAllTerms = e => setChecked({\n    terms1: e.target.checked,\n    terms2: e.target.checked,\n    terms3: e.target.checked\n  });\n  const handleOneTerm = key => e => setChecked(prev => ({\n    ...prev,\n    [key]: e.target.checked\n  }));\n\n  // 본인인증 관련 상태\n  const [verificationMethod, setVerificationMethod] = useState('phone'); // 'phone' | 'email' - 라디오 버튼 선택\n  const [isPhoneVerified, setIsPhoneVerified] = useState(false);\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [phoneSentCode, setPhoneSentCode] = useState(''); // 휴대폰 인증번호 발송 여부 확인 (실제 발송된 코드)\n  const [emailSentCode, setEmailSentCode] = useState(''); // 이메일 인증번호 발송 여부 확인 (실제 발송된 코드)\n\n  // 회원가입 폼 상태 및 아이디 중복검사\n  const [form, setForm] = useState({\n    userId: '',\n    password: '',\n    passwordConfirm: '',\n    phone: '',\n    email: ''\n  });\n  const [idCheckResult, setIdCheckResult] = useState(null); // null | 'OK' | 'DUPLICATE' | 'ERROR'\n  const [errors, setErrors] = useState({});\n\n  // 인증 방식 변경 시 상태 초기화\n  useEffect(() => {\n    // 라디오 버튼 선택 변경 시 해당 인증 방식의 상태만 유지하고 다른 방식은 초기화\n    if (verificationMethod === 'phone') {\n      setIsEmailVerified(false);\n      setEmailSentCode('');\n      // 이메일 관련 에러 메시지 초기화\n      setErrors(prev => ({\n        ...prev,\n        email: undefined\n      }));\n    } else if (verificationMethod === 'email') {\n      setIsPhoneVerified(false);\n      setPhoneSentCode('');\n      // 휴대폰 관련 에러 메시지 초기화\n      setErrors(prev => ({\n        ...prev,\n        phone: undefined\n      }));\n    }\n  }, [verificationMethod]);\n\n  // 본인인증 완료 여부에 따라 다음 단계로 전환 (회원가입 폼으로)\n  useEffect(() => {\n    const isCurrentMethodVerified = verificationMethod === 'phone' && isPhoneVerified || verificationMethod === 'email' && isEmailVerified;\n    if (isCurrentMethodVerified && currentStep === 'verification') {\n      setCurrentStep('signup');\n      // 인증된 정보를 form 상태에 자동 입력\n      if (verificationMethod === 'phone') {\n        setForm(prev => ({\n          ...prev,\n          phone: prev.phone,\n          email: ''\n        })); // 인증된 폰번호는 유지, 이메일은 비움\n      } else if (verificationMethod === 'email') {\n        setForm(prev => ({\n          ...prev,\n          email: prev.email,\n          phone: ''\n        })); // 인증된 이메일은 유지, 폰번호는 비움\n      }\n    }\n  }, [isPhoneVerified, isEmailVerified, currentStep, verificationMethod, form.phone, form.email]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // 휴대폰 번호 입력 시 숫자만 허용\n    if (name === 'phone') {\n      const onlyNums = value.replace(/[^0-9]/g, '');\n      setForm(prev => ({\n        ...prev,\n        [name]: onlyNums\n      }));\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n    setErrors(prev => ({\n      ...prev,\n      [name]: undefined\n    }));\n    if (name === 'userId') setIdCheckResult(null);\n  };\n\n  // 아이디 중복확인\n  const checkDuplicateId = async () => {\n    if (!form.userId) {\n      setErrors(e => ({\n        ...e,\n        userId: '아이디를 입력해주세요.'\n      }));\n      return;\n    }\n    try {\n      // 실제 API 호출 시에는 form.userId를 서버로 전송\n      const res = await axios.get(`/api/users/check-id?userId=${encodeURIComponent(form.userId)}`);\n      if (res.data.available) {\n        // 예시: { available: true }\n        setIdCheckResult('OK');\n      } else {\n        // 예시: { available: false }\n        setIdCheckResult('DUPLICATE');\n      }\n    } catch (err) {\n      console.error(\"아이디 중복 확인 에러:\", err);\n      setIdCheckResult('ERROR');\n    }\n  };\n\n  // 휴대폰 인증번호 발송\n  const handleSendPhoneCode = async () => {\n    setErrors(prev => ({\n      ...prev,\n      phone: undefined\n    })); // 에러 메시지 초기화\n\n    if (!form.phone || !/^\\d{10,11}$/.test(form.phone)) {\n      setErrors(e => ({\n        ...e,\n        phone: '유효한 휴대폰 번호(10-11자리 숫자)를 입력해주세요.'\n      }));\n      return;\n    }\n    try {\n      // 실제 서비스에서는 API로 인증번호 발송\n      // const res = await axios.post('/api/send-phone-code', { phoneNumber: form.phone });\n      // if (res.data.success) {\n      //     setPhoneSentCode(res.data.code); // 실제로는 클라이언트에서 알 수 없어야 함 (백엔드에서 관리)\n      //     alert('인증번호가 발송되었습니다!');\n      // } else {\n      //     setErrors(e => ({ ...e, phone: res.data.message || '인증번호 발송 실패' }));\n      // }\n      const tempCode = '123456'; // 예시 인증번호\n      setPhoneSentCode(tempCode);\n      alert(`인증번호가 발송되었습니다. (예시: ${tempCode})`);\n    } catch (error) {\n      console.error(\"휴대폰 인증번호 발송 에러:\", error);\n      setErrors(e => ({\n        ...e,\n        phone: '인증번호 발송 중 오류가 발생했습니다.'\n      }));\n    }\n  };\n\n  // 휴대폰 인증번호 확인\n  const handleVerifyPhone = () => {\n    setErrors(prev => ({\n      ...prev,\n      phoneCode: undefined\n    })); // 에러 메시지 초기화\n    if (form.phoneCode === phoneSentCode && form.phoneCode) {\n      // form.phoneCode를 사용하도록 수정\n      setIsPhoneVerified(true);\n      setErrors(prev => ({\n        ...prev,\n        phone: undefined,\n        phoneCode: undefined\n      })); // 성공 시 관련 에러 초기화\n      alert('휴대폰 인증이 완료되었습니다.');\n    } else {\n      setIsPhoneVerified(false);\n      setErrors(prev => ({\n        ...prev,\n        phoneCode: '인증번호가 일치하지 않거나 올바르지 않습니다.'\n      }));\n    }\n  };\n\n  // 이메일 인증번호 발송\n  const handleSendEmailCode = async () => {\n    setErrors(prev => ({\n      ...prev,\n      email: undefined\n    })); // 에러 메시지 초기화\n\n    if (!form.email || !/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      setErrors(e => ({\n        ...e,\n        email: '유효한 이메일 주소를 입력해주세요.'\n      }));\n      return;\n    }\n    try {\n      // 실제 서비스에서는 API로 인증번호 발송\n      // const res = await axios.post('/api/send-email-code', { email: form.email });\n      // if (res.data.success) {\n      //     setEmailSentCode(res.data.code); // 실제로는 클라이언트에서 알 수 없어야 함 (백엔드에서 관리)\n      //     alert('인증번호가 발송되었습니다!');\n      // } else {\n      //     setErrors(e => ({ ...e, email: res.data.message || '인증번호 발송 실패' }));\n      // }\n      const tempCode = '654321'; // 예시 인증번호\n      setEmailSentCode(tempCode);\n      alert(`인증번호가 발송되었습니다. (예시: ${tempCode})`);\n    } catch (error) {\n      console.error(\"이메일 인증번호 발송 에러:\", error);\n      setErrors(e => ({\n        ...e,\n        email: '인증번호 발송 중 오류가 발생했습니다.'\n      }));\n    }\n  };\n\n  // 이메일 인증번호 확인\n  const handleVerifyEmail = () => {\n    setErrors(prev => ({\n      ...prev,\n      emailCode: undefined\n    })); // 에러 메시지 초기화\n    if (form.emailCode === emailSentCode && form.emailCode) {\n      // form.emailCode를 사용하도록 수정\n      setIsEmailVerified(true);\n      setErrors(prev => ({\n        ...prev,\n        email: undefined,\n        emailCode: undefined\n      })); // 성공 시 관련 에러 초기화\n      alert('이메일 인증이 완료되었습니다.');\n    } else {\n      setIsEmailVerified(false);\n      setErrors(prev => ({\n        ...prev,\n        emailCode: '인증번호가 일치하지 않거나 올바르지 않습니다.'\n      }));\n    }\n  };\n\n  // 최종 회원가입 폼 필수값 검증\n  const validateSignupForm = () => {\n    const newErrors = {};\n    if (!form.userId) newErrors.userId = '아이디를 입력하세요.';\n    if (idCheckResult !== 'OK') newErrors.userId = '아이디 중복확인을 해주세요.';\n    if (!form.password) newErrors.password = '비밀번호를 입력하세요.';\n    if (!form.passwordConfirm) newErrors.passwordConfirm = '비밀번호 확인을 입력하세요.';\n    if (form.password !== form.passwordConfirm) newErrors.passwordConfirm = '비밀번호가 일치하지 않습니다.';\n\n    // 본인인증 여부 최종 확인\n    const isCurrentMethodVerified = verificationMethod === 'phone' && isPhoneVerified || verificationMethod === 'email' && isEmailVerified;\n    if (!isCurrentMethodVerified) {\n      newErrors.general = '본인인증이 완료되지 않았습니다.';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmitSignup = async e => {\n    e.preventDefault();\n    if (!validateSignupForm()) {\n      alert('필수 입력 정보를 확인해주세요.');\n      return;\n    }\n    try {\n      // 실제 회원가입 API 호출\n      // const res = await axios.post('/api/register', form);\n      // if (res.data.success) {\n      //     alert('회원가입이 완료되었습니다!');\n      //     // 회원가입 성공 후 페이지 이동 로직 추가 (예: 로그인 페이지)\n      //     // navigate('/login');\n      // } else {\n      //     setErrors(prev => ({ ...prev, general: res.data.message || '회원가입 실패' }));\n      // }\n      console.log('회원가입 데이터:', form);\n      alert('회원가입이 완료되었습니다!');\n    } catch (error) {\n      console.error(\"회원가입 에러:\", error);\n      setErrors(prev => ({\n        ...prev,\n        general: '회원가입 중 오류가 발생했습니다.'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), currentStep === 'terms' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terms-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"terms-all-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: allChecked,\n            onChange: handleAllTerms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"terms-all-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"\\uB178\\uBC14\\uBB38\\uD654\\uC13C\\uD130 \\uC774\\uC6A9\\uC57D\\uAD00, \\uAC1C\\uC778\\uC815\\uBCF4 \\uC218\\uC9D1 \\uBC0F \\uC774\\uC6A9, \\uD504\\uB85C\\uBAA8\\uC158 \\uC815\\uBCF4 \\uC218\\uC2E0(\\uC120\\uD0DD)\\uC5D0 \\uBAA8\\uB450 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"terms-list\",\n          children: TERMS.map(term => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"terms-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"terms-item-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: checked[term.key],\n                onChange: handleOneTerm(term.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"terms-item-title\",\n                children: [term.label, \" \", term.required ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"terms-required\",\n                  children: \"(\\uD544\\uC218)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 106\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"terms-optional\",\n                  children: \"(\\uC120\\uD0DD)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 153\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terms-scrollbox\",\n              children: term.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this)]\n          }, term.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"terms-next-btn\",\n          onClick: () => setCurrentStep('verification'),\n          disabled: !allRequiredChecked,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this), currentStep === 'verification' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uBCF8\\uC778\\uC778\\uC99D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC744 \\uC704\\uD574 \\uD734\\uB300\\uD3F0 \\uB610\\uB294 \\uC774\\uBA54\\uC77C \\uC911 \\uD55C \\uAC00\\uC9C0 \\uBC29\\uBC95\\uC73C\\uB85C \\uBCF8\\uC778\\uC778\\uC99D\\uC744 \\uC9C4\\uD589\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-method-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"verificationMethod\",\n            value: \"phone\",\n            checked: verificationMethod === 'phone',\n            onChange: () => setVerificationMethod('phone')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), \" \\uD734\\uB300\\uD3F0 \\uC778\\uC99D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"verificationMethod\",\n            value: \"email\",\n            checked: verificationMethod === 'email',\n            onChange: () => setVerificationMethod('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), \" \\uC774\\uBA54\\uC77C \\uC778\\uC99D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), verificationMethod === 'phone' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-method-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD734\\uB300\\uD3F0 \\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            className: \"form-label\",\n            children: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              id: \"phone\",\n              name: \"phone\",\n              placeholder: \"'-' \\uC5C6\\uC774 \\uC22B\\uC790\\uB9CC \\uC785\\uB825\",\n              className: `form-control ${errors.phone ? 'error' : ''}`,\n              value: form.phone,\n              onChange: handleChange,\n              maxLength: \"11\",\n              disabled: isPhoneVerified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleSendPhoneCode,\n              disabled: isPhoneVerified || phoneSentCode,\n              children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 33\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this), phoneSentCode && !isPhoneVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phoneCode\",\n            className: \"form-label\",\n            children: \"\\uC778\\uC99D\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"phoneCode\",\n              name: \"phoneCode\" // name 속성 추가\n              ,\n              placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 6\\uC790\\uB9AC \\uC785\\uB825\",\n              className: `form-control ${errors.phoneCode ? 'error' : ''}`,\n              value: form.phoneCode || '' // form.phoneCode 사용, 초기값 '' 설정\n              ,\n              onChange: handleChange // handleChange 사용\n              ,\n              maxLength: \"6\",\n              disabled: isPhoneVerified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVerifyPhone,\n              disabled: isPhoneVerified,\n              children: \"\\uC778\\uC99D \\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 37\n          }, this), errors.phoneCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.phoneCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 33\n        }, this), isPhoneVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"green-text\",\n          children: \"\\uC778\\uC99D\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }, this), verificationMethod === 'email' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-method-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"\\uC608: example@email.com\",\n              className: `form-control ${errors.email ? 'error' : ''}`,\n              value: form.email,\n              onChange: handleChange,\n              disabled: isEmailVerified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleSendEmailCode,\n              disabled: isEmailVerified || emailSentCode,\n              children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 29\n        }, this), emailSentCode && !isEmailVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailCode\",\n            className: \"form-label\",\n            children: \"\\uC778\\uC99D\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"emailCode\",\n              name: \"emailCode\" // name 속성 추가\n              ,\n              placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 6\\uC790\\uB9AC \\uC785\\uB825\",\n              className: `form-control ${errors.emailCode ? 'error' : ''}`,\n              value: form.emailCode || '' // form.emailCode 사용, 초기값 '' 설정\n              ,\n              onChange: handleChange // handleChange 사용\n              ,\n              maxLength: \"6\",\n              disabled: isEmailVerified\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVerifyEmail,\n              disabled: isEmailVerified,\n              children: \"\\uC778\\uC99D \\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 37\n          }, this), errors.emailCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-msg\",\n            children: errors.emailCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 33\n        }, this), isEmailVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"green-text\",\n          children: \"\\uC778\\uC99D\\uC774 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"verification-complete-btn\" // 클래스명 변경 (더 적절하게)\n        ,\n        onClick: () => {/* 이 버튼은 useEffect에 의해 자동으로 다음 단계로 넘어감 */},\n        disabled: !(verificationMethod === 'phone' && isPhoneVerified) && !(verificationMethod === 'email' && isEmailVerified),\n        style: {\n          marginTop: '20px'\n        },\n        children: \"\\uBCF8\\uC778\\uC778\\uC99D \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), !(verificationMethod === 'phone' && isPhoneVerified || verificationMethod === 'email' && isEmailVerified) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        style: {\n          marginTop: 8\n        },\n        children: \"\\uC120\\uD0DD\\uB41C \\uC778\\uC99D \\uBC29\\uC2DD(\\uD734\\uB300\\uD3F0 \\uB610\\uB294 \\uC774\\uBA54\\uC77C)\\uC744 \\uC644\\uB8CC\\uD574\\uC57C \\uB2E4\\uC74C \\uB2E8\\uACC4\\uB85C \\uC9C4\\uD589\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this), currentStep === 'signup' && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmitSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD68C\\uC6D0 \\uC815\\uBCF4 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userId\",\n          className: \"form-label\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userId\",\n            name: \"userId\",\n            placeholder: \"\\uC544\\uC774\\uB514\",\n            className: `form-control ${errors.userId ? 'error' : ''}`,\n            value: form.userId,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: checkDuplicateId,\n            children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), idCheckResult === 'OK' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"green-text\",\n          children: \"\\uC0AC\\uC6A9\\uAC00\\uB2A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 52\n        }, this), idCheckResult === 'DUPLICATE' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: \"\\uC911\\uBCF5\\uB41C \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 59\n        }, this), idCheckResult === 'ERROR' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: \"\\uC544\\uC774\\uB514 \\uC911\\uBCF5 \\uD655\\uC778 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 55\n        }, this), errors.userId && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: errors.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          className: `form-control ${errors.password ? 'error' : ''}`,\n          value: form.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"passwordConfirm\",\n          className: \"form-label\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"passwordConfirm\",\n          name: \"passwordConfirm\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          className: `form-control ${errors.passwordConfirm ? 'error' : ''}`,\n          value: form.passwordConfirm,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }, this), errors.passwordConfirm && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: errors.passwordConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }, this), (verificationMethod === 'phone' || form.phone) &&\n      /*#__PURE__*/\n      // 전화번호 필드를 항상 보여주되, disabled로 처리\n      _jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          className: \"form-label\",\n          children: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          id: \"phone\",\n          name: \"phone\",\n          value: form.phone,\n          className: \"form-control\",\n          readOnly: true // 읽기 전용\n          ,\n          disabled: true // 비활성화\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 29\n        }, this), isPhoneVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"green-text\",\n          children: \"\\uD734\\uB300\\uD3F0 \\uBCF8\\uC778\\uC778\\uC99D \\uC644\\uB8CC (\\uC790\\uB3D9 \\uC785\\uB825)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 25\n      }, this), (verificationMethod === 'email' || form.email) &&\n      /*#__PURE__*/\n      // 이메일 필드를 항상 보여주되, disabled로 처리\n      _jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: form.email,\n          className: \"form-control\",\n          readOnly: true // 읽기 전용\n          ,\n          disabled: true // 비활성화\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 29\n        }, this), isEmailVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"green-text\",\n          children: \"\\uC774\\uBA54\\uC77C \\uBCF8\\uC778\\uC778\\uC99D \\uC644\\uB8CC (\\uC790\\uB3D9 \\uC785\\uB825)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 25\n      }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: errors.general\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n}\n_s(SignupPage, \"mZBkc5p3MtyljQ03ybvY9w/eQ2Q=\");\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TERMS","key","label","required","content","SignupPage","_s","currentStep","setCurrentStep","checked","setChecked","terms1","terms2","terms3","allRequiredChecked","filter","t","every","allChecked","handleAllTerms","e","target","handleOneTerm","prev","verificationMethod","setVerificationMethod","isPhoneVerified","setIsPhoneVerified","isEmailVerified","setIsEmailVerified","phoneSentCode","setPhoneSentCode","emailSentCode","setEmailSentCode","form","setForm","userId","password","passwordConfirm","phone","email","idCheckResult","setIdCheckResult","errors","setErrors","undefined","isCurrentMethodVerified","handleChange","name","value","onlyNums","replace","checkDuplicateId","res","get","encodeURIComponent","data","available","err","console","error","handleSendPhoneCode","test","tempCode","alert","handleVerifyPhone","phoneCode","handleSendEmailCode","handleVerifyEmail","emailCode","validateSignupForm","newErrors","general","Object","keys","length","handleSubmitSignup","preventDefault","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","term","onClick","disabled","htmlFor","style","display","gap","id","placeholder","maxLength","marginTop","onSubmit","alignItems","readOnly","_c","$RefreshReg$"],"sources":["C:/novaCulture/eunni/src/main/resources/static/eunni/src/components/SignupPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles.css'; // 전역 CSS 파일\r\n\r\nconst TERMS = [\r\n    {\r\n        key: 'terms1',\r\n        label: '노바문화센터 이용약관 동의',\r\n        required: true,\r\n        content: '여러분을 환영합니다. 노바문화센터 서비스 및 제품(이하 “서비스”)을 이용해 주셔서 감사합니다. 본 약관은 다양한 노바문화센터 서비스의 이용과 관련하여 노바문화센터 서비스를 제공하는 노바문화센터 주식회사(이하 “노바문화센터”)와 이를 이용하는 “회원”과의 관계, 회원의 서비스 이용 절차, 권리·의무 및 책임사항 등을 규정합니다.'\r\n    },\r\n    {\r\n        key: 'terms2',\r\n        label: '개인정보 수집 및 이용 동의',\r\n        required: true,\r\n        content: '개인정보보호법에 따라 회원가입 신청하시는 분께 수집하는 개인정보의 항목, 수집 및 이용목적, 보유 및 이용기간, 동의 거부권 및 동의 거부 시 불이익에 관한 사항을 안내 드립니다.'\r\n    },\r\n    {\r\n        key: 'terms3',\r\n        label: '프로모션 정보 수신 동의',\r\n        required: false,\r\n        content: '노바문화센터에서 제공하는 이벤트/혜택 등 다양한 정보를 휴대전화(앱 알림 또는 문자), 이메일로 받아보실 수 있습니다. 일부 서비스(별도 회원 체계로 운영하거나 노바문화센터 가입 이후 추가 가입하여 이용하는 서비스 등)의 경우, 별도의 동의 후 서비스 이용이 가능합니다.'\r\n    }\r\n];\r\n\r\nfunction SignupPage() {\r\n    // 회원가입 단계 관리: 'terms' -> 'verification' -> 'signup'\r\n    const [currentStep, setCurrentStep] = useState('terms');\r\n\r\n    // 약관 동의 처리\r\n    const [checked, setChecked] = useState({ terms1: false, terms2: false, terms3: false });\r\n    const allRequiredChecked = TERMS.filter(t => t.required).every(t => checked[t.key]);\r\n    const allChecked = TERMS.every(t => checked[t.key]);\r\n\r\n    const handleAllTerms = e => setChecked({ terms1: e.target.checked, terms2: e.target.checked, terms3: e.target.checked });\r\n    const handleOneTerm = key => e => setChecked(prev => ({ ...prev, [key]: e.target.checked }));\r\n\r\n    // 본인인증 관련 상태\r\n    const [verificationMethod, setVerificationMethod] = useState('phone'); // 'phone' | 'email' - 라디오 버튼 선택\r\n    const [isPhoneVerified, setIsPhoneVerified] = useState(false);\r\n    const [isEmailVerified, setIsEmailVerified] = useState(false);\r\n    const [phoneSentCode, setPhoneSentCode] = useState(''); // 휴대폰 인증번호 발송 여부 확인 (실제 발송된 코드)\r\n    const [emailSentCode, setEmailSentCode] = useState(''); // 이메일 인증번호 발송 여부 확인 (실제 발송된 코드)\r\n\r\n    // 회원가입 폼 상태 및 아이디 중복검사\r\n    const [form, setForm] = useState({ userId: '', password: '', passwordConfirm: '', phone: '', email: '' });\r\n    const [idCheckResult, setIdCheckResult] = useState(null); // null | 'OK' | 'DUPLICATE' | 'ERROR'\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // 인증 방식 변경 시 상태 초기화\r\n    useEffect(() => {\r\n        // 라디오 버튼 선택 변경 시 해당 인증 방식의 상태만 유지하고 다른 방식은 초기화\r\n        if (verificationMethod === 'phone') {\r\n            setIsEmailVerified(false);\r\n            setEmailSentCode('');\r\n            // 이메일 관련 에러 메시지 초기화\r\n            setErrors(prev => ({ ...prev, email: undefined }));\r\n        } else if (verificationMethod === 'email') {\r\n            setIsPhoneVerified(false);\r\n            setPhoneSentCode('');\r\n            // 휴대폰 관련 에러 메시지 초기화\r\n            setErrors(prev => ({ ...prev, phone: undefined }));\r\n        }\r\n    }, [verificationMethod]);\r\n\r\n    // 본인인증 완료 여부에 따라 다음 단계로 전환 (회원가입 폼으로)\r\n    useEffect(() => {\r\n        const isCurrentMethodVerified = (verificationMethod === 'phone' && isPhoneVerified) || (verificationMethod === 'email' && isEmailVerified);\r\n        if (isCurrentMethodVerified && currentStep === 'verification') {\r\n            setCurrentStep('signup');\r\n            // 인증된 정보를 form 상태에 자동 입력\r\n            if (verificationMethod === 'phone') {\r\n                setForm(prev => ({ ...prev, phone: prev.phone, email: '' })); // 인증된 폰번호는 유지, 이메일은 비움\r\n            } else if (verificationMethod === 'email') {\r\n                setForm(prev => ({ ...prev, email: prev.email, phone: '' })); // 인증된 이메일은 유지, 폰번호는 비움\r\n            }\r\n        }\r\n    }, [isPhoneVerified, isEmailVerified, currentStep, verificationMethod, form.phone, form.email]);\r\n\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        // 휴대폰 번호 입력 시 숫자만 허용\r\n        if (name === 'phone') {\r\n            const onlyNums = value.replace(/[^0-9]/g, '');\r\n            setForm(prev => ({ ...prev, [name]: onlyNums }));\r\n        } else {\r\n            setForm(prev => ({ ...prev, [name]: value }));\r\n        }\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n        if (name === 'userId') setIdCheckResult(null);\r\n    };\r\n\r\n    // 아이디 중복확인\r\n    const checkDuplicateId = async () => {\r\n        if (!form.userId) {\r\n            setErrors(e => ({ ...e, userId: '아이디를 입력해주세요.' }));\r\n            return;\r\n        }\r\n        try {\r\n            // 실제 API 호출 시에는 form.userId를 서버로 전송\r\n            const res = await axios.get(`/api/users/check-id?userId=${encodeURIComponent(form.userId)}`);\r\n            if (res.data.available) { // 예시: { available: true }\r\n                setIdCheckResult('OK');\r\n            } else { // 예시: { available: false }\r\n                setIdCheckResult('DUPLICATE');\r\n            }\r\n        } catch (err) {\r\n            console.error(\"아이디 중복 확인 에러:\", err);\r\n            setIdCheckResult('ERROR');\r\n        }\r\n    };\r\n\r\n    // 휴대폰 인증번호 발송\r\n    const handleSendPhoneCode = async () => {\r\n        setErrors(prev => ({ ...prev, phone: undefined })); // 에러 메시지 초기화\r\n\r\n        if (!form.phone || !/^\\d{10,11}$/.test(form.phone)) {\r\n            setErrors(e => ({ ...e, phone: '유효한 휴대폰 번호(10-11자리 숫자)를 입력해주세요.' }));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // 실제 서비스에서는 API로 인증번호 발송\r\n            // const res = await axios.post('/api/send-phone-code', { phoneNumber: form.phone });\r\n            // if (res.data.success) {\r\n            //     setPhoneSentCode(res.data.code); // 실제로는 클라이언트에서 알 수 없어야 함 (백엔드에서 관리)\r\n            //     alert('인증번호가 발송되었습니다!');\r\n            // } else {\r\n            //     setErrors(e => ({ ...e, phone: res.data.message || '인증번호 발송 실패' }));\r\n            // }\r\n            const tempCode = '123456'; // 예시 인증번호\r\n            setPhoneSentCode(tempCode);\r\n            alert(`인증번호가 발송되었습니다. (예시: ${tempCode})`);\r\n        } catch (error) {\r\n            console.error(\"휴대폰 인증번호 발송 에러:\", error);\r\n            setErrors(e => ({ ...e, phone: '인증번호 발송 중 오류가 발생했습니다.' }));\r\n        }\r\n    };\r\n\r\n    // 휴대폰 인증번호 확인\r\n    const handleVerifyPhone = () => {\r\n        setErrors(prev => ({ ...prev, phoneCode: undefined })); // 에러 메시지 초기화\r\n        if (form.phoneCode === phoneSentCode && form.phoneCode) { // form.phoneCode를 사용하도록 수정\r\n            setIsPhoneVerified(true);\r\n            setErrors(prev => ({ ...prev, phone: undefined, phoneCode: undefined })); // 성공 시 관련 에러 초기화\r\n            alert('휴대폰 인증이 완료되었습니다.');\r\n        } else {\r\n            setIsPhoneVerified(false);\r\n            setErrors(prev => ({ ...prev, phoneCode: '인증번호가 일치하지 않거나 올바르지 않습니다.' }));\r\n        }\r\n    };\r\n\r\n    // 이메일 인증번호 발송\r\n    const handleSendEmailCode = async () => {\r\n        setErrors(prev => ({ ...prev, email: undefined })); // 에러 메시지 초기화\r\n\r\n        if (!form.email || !/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n            setErrors(e => ({ ...e, email: '유효한 이메일 주소를 입력해주세요.' }));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // 실제 서비스에서는 API로 인증번호 발송\r\n            // const res = await axios.post('/api/send-email-code', { email: form.email });\r\n            // if (res.data.success) {\r\n            //     setEmailSentCode(res.data.code); // 실제로는 클라이언트에서 알 수 없어야 함 (백엔드에서 관리)\r\n            //     alert('인증번호가 발송되었습니다!');\r\n            // } else {\r\n            //     setErrors(e => ({ ...e, email: res.data.message || '인증번호 발송 실패' }));\r\n            // }\r\n            const tempCode = '654321'; // 예시 인증번호\r\n            setEmailSentCode(tempCode);\r\n            alert(`인증번호가 발송되었습니다. (예시: ${tempCode})`);\r\n        } catch (error) {\r\n            console.error(\"이메일 인증번호 발송 에러:\", error);\r\n            setErrors(e => ({ ...e, email: '인증번호 발송 중 오류가 발생했습니다.' }));\r\n        }\r\n    };\r\n\r\n    // 이메일 인증번호 확인\r\n    const handleVerifyEmail = () => {\r\n        setErrors(prev => ({ ...prev, emailCode: undefined })); // 에러 메시지 초기화\r\n        if (form.emailCode === emailSentCode && form.emailCode) { // form.emailCode를 사용하도록 수정\r\n            setIsEmailVerified(true);\r\n            setErrors(prev => ({ ...prev, email: undefined, emailCode: undefined })); // 성공 시 관련 에러 초기화\r\n            alert('이메일 인증이 완료되었습니다.');\r\n        } else {\r\n            setIsEmailVerified(false);\r\n            setErrors(prev => ({ ...prev, emailCode: '인증번호가 일치하지 않거나 올바르지 않습니다.' }));\r\n        }\r\n    };\r\n\r\n    // 최종 회원가입 폼 필수값 검증\r\n    const validateSignupForm = () => {\r\n        const newErrors = {};\r\n        if (!form.userId) newErrors.userId = '아이디를 입력하세요.';\r\n        if (idCheckResult !== 'OK') newErrors.userId = '아이디 중복확인을 해주세요.';\r\n        if (!form.password) newErrors.password = '비밀번호를 입력하세요.';\r\n        if (!form.passwordConfirm) newErrors.passwordConfirm = '비밀번호 확인을 입력하세요.';\r\n        if (form.password !== form.passwordConfirm) newErrors.passwordConfirm = '비밀번호가 일치하지 않습니다.';\r\n\r\n        // 본인인증 여부 최종 확인\r\n        const isCurrentMethodVerified = (verificationMethod === 'phone' && isPhoneVerified) || (verificationMethod === 'email' && isEmailVerified);\r\n        if (!isCurrentMethodVerified) {\r\n             newErrors.general = '본인인증이 완료되지 않았습니다.';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmitSignup = async (e) => {\r\n        e.preventDefault();\r\n        if (!validateSignupForm()) {\r\n            alert('필수 입력 정보를 확인해주세요.');\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            // 실제 회원가입 API 호출\r\n            // const res = await axios.post('/api/register', form);\r\n            // if (res.data.success) {\r\n            //     alert('회원가입이 완료되었습니다!');\r\n            //     // 회원가입 성공 후 페이지 이동 로직 추가 (예: 로그인 페이지)\r\n            //     // navigate('/login');\r\n            // } else {\r\n            //     setErrors(prev => ({ ...prev, general: res.data.message || '회원가입 실패' }));\r\n            // }\r\n            console.log('회원가입 데이터:', form);\r\n            alert('회원가입이 완료되었습니다!');\r\n        } catch (error) {\r\n            console.error(\"회원가입 에러:\", error);\r\n            setErrors(prev => ({ ...prev, general: '회원가입 중 오류가 발생했습니다.' }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-container auth-page\">\r\n            <h2>회원가입</h2>\r\n\r\n            {currentStep === 'terms' && (\r\n                <div className=\"terms-box\">\r\n                    <div className=\"terms-content\">\r\n                        <label className=\"terms-all-label\">\r\n                            <input type=\"checkbox\" checked={allChecked} onChange={handleAllTerms} />\r\n                            <span className=\"terms-all-text\"><b>노바문화센터 이용약관, 개인정보 수집 및 이용, 프로모션 정보 수신(선택)에 모두 동의합니다.</b></span>\r\n                        </label>\r\n                        <div className=\"terms-list\">\r\n                            {TERMS.map(term => (\r\n                                <div className=\"terms-item\" key={term.key}>\r\n                                    <label className=\"terms-item-label\">\r\n                                        <input type=\"checkbox\" checked={checked[term.key]} onChange={handleOneTerm(term.key)} />\r\n                                        <span className=\"terms-item-title\">{term.label} {term.required ? <span className=\"terms-required\">(필수)</span> : <span className=\"terms-optional\">(선택)</span>}</span>\r\n                                    </label>\r\n                                    <div className=\"terms-scrollbox\">{term.content}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <button\r\n                            className=\"terms-next-btn\"\r\n                            onClick={() => setCurrentStep('verification')}\r\n                            disabled={!allRequiredChecked}\r\n                        >\r\n                            확인\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {currentStep === 'verification' && (\r\n                <div className=\"verification-section\">\r\n                    <h3>본인인증</h3>\r\n                    <p>회원가입을 위해 휴대폰 또는 이메일 중 한 가지 방법으로 본인인증을 진행해주세요.</p>\r\n\r\n                    <div className=\"verification-method-selector\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"verificationMethod\"\r\n                                value=\"phone\"\r\n                                checked={verificationMethod === 'phone'}\r\n                                onChange={() => setVerificationMethod('phone')}\r\n                            /> 휴대폰 인증\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"verificationMethod\"\r\n                                value=\"email\"\r\n                                checked={verificationMethod === 'email'}\r\n                                onChange={() => setVerificationMethod('email')}\r\n                            /> 이메일 인증\r\n                        </label>\r\n                    </div>\r\n\r\n                    {/* 휴대폰 인증 섹션 */}\r\n                    {verificationMethod === 'phone' && (\r\n                        <div className=\"verification-method-box\">\r\n                            <h4>휴대폰 인증</h4>\r\n                            <div className=\"form-group\"> {/* form-group 클래스 추가 */}\r\n                                <label htmlFor=\"phone\" className=\"form-label\">휴대폰 번호</label>\r\n                                <div style={{ display: 'flex', gap: '10px' }}>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        id=\"phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"'-' 없이 숫자만 입력\"\r\n                                        className={`form-control ${errors.phone ? 'error' : ''}`}\r\n                                        value={form.phone}\r\n                                        onChange={handleChange}\r\n                                        maxLength=\"11\"\r\n                                        disabled={isPhoneVerified}\r\n                                    />\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={handleSendPhoneCode}\r\n                                        disabled={isPhoneVerified || phoneSentCode}\r\n                                    >\r\n                                        인증번호 발송\r\n                                    </button>\r\n                                </div>\r\n                                {errors.phone && <p className=\"error-msg\">{errors.phone}</p>}\r\n                            </div>\r\n                            {phoneSentCode && !isPhoneVerified && (\r\n                                <div className=\"form-group\"> {/* form-group 클래스 추가 */}\r\n                                    <label htmlFor=\"phoneCode\" className=\"form-label\">인증번호</label>\r\n                                    <div style={{ display: 'flex', gap: '10px' }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"phoneCode\"\r\n                                            name=\"phoneCode\" // name 속성 추가\r\n                                            placeholder=\"인증번호 6자리 입력\"\r\n                                            className={`form-control ${errors.phoneCode ? 'error' : ''}`}\r\n                                            value={form.phoneCode || ''} // form.phoneCode 사용, 초기값 '' 설정\r\n                                            onChange={handleChange} // handleChange 사용\r\n                                            maxLength=\"6\"\r\n                                            disabled={isPhoneVerified}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={handleVerifyPhone}\r\n                                            disabled={isPhoneVerified}\r\n                                        >\r\n                                            인증 확인\r\n                                        </button>\r\n                                    </div>\r\n                                    {errors.phoneCode && <p className=\"error-msg\">{errors.phoneCode}</p>}\r\n                                </div>\r\n                            )}\r\n                            {isPhoneVerified && <p className=\"green-text\">인증이 완료되었습니다!</p>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* 이메일 인증 섹션 */}\r\n                    {verificationMethod === 'email' && (\r\n                        <div className=\"verification-method-box\">\r\n                            <h4>이메일 인증</h4>\r\n                            <div className=\"form-group\"> {/* form-group 클래스 추가 */}\r\n                                <label htmlFor=\"email\" className=\"form-label\">이메일 주소</label>\r\n                                <div style={{ display: 'flex', gap: '10px' }}>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"예: example@email.com\"\r\n                                        className={`form-control ${errors.email ? 'error' : ''}`}\r\n                                        value={form.email}\r\n                                        onChange={handleChange}\r\n                                        disabled={isEmailVerified}\r\n                                    />\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={handleSendEmailCode}\r\n                                        disabled={isEmailVerified || emailSentCode}\r\n                                    >\r\n                                        인증번호 발송\r\n                                    </button>\r\n                                </div>\r\n                                {errors.email && <p className=\"error-msg\">{errors.email}</p>}\r\n                            </div>\r\n                            {emailSentCode && !isEmailVerified && (\r\n                                <div className=\"form-group\"> {/* form-group 클래스 추가 */}\r\n                                    <label htmlFor=\"emailCode\" className=\"form-label\">인증번호</label>\r\n                                    <div style={{ display: 'flex', gap: '10px' }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"emailCode\"\r\n                                            name=\"emailCode\" // name 속성 추가\r\n                                            placeholder=\"인증번호 6자리 입력\"\r\n                                            className={`form-control ${errors.emailCode ? 'error' : ''}`}\r\n                                            value={form.emailCode || ''} // form.emailCode 사용, 초기값 '' 설정\r\n                                            onChange={handleChange} // handleChange 사용\r\n                                            maxLength=\"6\"\r\n                                            disabled={isEmailVerified}\r\n                                        />\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={handleVerifyEmail}\r\n                                            disabled={isEmailVerified}\r\n                                        >\r\n                                            인증 확인\r\n                                        </button>\r\n                                    </div>\r\n                                    {errors.emailCode && <p className=\"error-msg\">{errors.emailCode}</p>}\r\n                                </div>\r\n                            )}\r\n                            {isEmailVerified && <p className=\"green-text\">인증이 완료되었습니다!</p>}\r\n                        </div>\r\n                    )}\r\n\r\n                    <button\r\n                        className=\"verification-complete-btn\" // 클래스명 변경 (더 적절하게)\r\n                        onClick={() => { /* 이 버튼은 useEffect에 의해 자동으로 다음 단계로 넘어감 */ }}\r\n                        disabled={!(verificationMethod === 'phone' && isPhoneVerified) && !(verificationMethod === 'email' && isEmailVerified)}\r\n                        style={{ marginTop: '20px' }}\r\n                    >\r\n                        본인인증 완료\r\n                    </button>\r\n                    {!((verificationMethod === 'phone' && isPhoneVerified) || (verificationMethod === 'email' && isEmailVerified)) && \r\n                        <div className=\"error-msg\" style={{ marginTop: 8 }}>\r\n                            선택된 인증 방식(휴대폰 또는 이메일)을 완료해야 다음 단계로 진행할 수 있습니다.\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )}\r\n\r\n            {currentStep === 'signup' && (\r\n                <form className=\"auth-form\" onSubmit={handleSubmitSignup}>\r\n                    <h3>회원 정보 입력</h3>\r\n                    <div className=\"form-group\"> {/* form-group 클래스 추가 */}\r\n                        <label htmlFor=\"userId\" className=\"form-label\">아이디</label>\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"userId\"\r\n                                name=\"userId\"\r\n                                placeholder=\"아이디\"\r\n                                className={`form-control ${errors.userId ? 'error' : ''}`}\r\n                                value={form.userId}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <button type=\"button\" onClick={checkDuplicateId}>중복확인</button>\r\n                        </div>\r\n                        {idCheckResult === 'OK' && <p className=\"green-text\">사용가능</p>}\r\n                        {idCheckResult === 'DUPLICATE' && <p className=\"error-msg\">중복된 아이디입니다.</p>}\r\n                        {idCheckResult === 'ERROR' && <p className=\"error-msg\">아이디 중복 확인 중 오류가 발생했습니다.</p>}\r\n                        {errors.userId && <p className=\"error-msg\">{errors.userId}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">비밀번호</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"비밀번호\"\r\n                            className={`form-control ${errors.password ? 'error' : ''}`}\r\n                            value={form.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.password && <p className=\"error-msg\">{errors.password}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"passwordConfirm\" className=\"form-label\">비밀번호 확인</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"passwordConfirm\"\r\n                            name=\"passwordConfirm\"\r\n                            placeholder=\"비밀번호 확인\"\r\n                            className={`form-control ${errors.passwordConfirm ? 'error' : ''}`}\r\n                            value={form.passwordConfirm}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {errors.passwordConfirm && <p className=\"error-msg\">{errors.passwordConfirm}</p>}\r\n                    </div>\r\n\r\n                    {/* 본인인증으로 자동 입력되는 필드 */}\r\n                    {(verificationMethod === 'phone' || form.phone) && ( // 전화번호 필드를 항상 보여주되, disabled로 처리\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone\" className=\"form-label\">휴대폰 번호</label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                value={form.phone}\r\n                                className=\"form-control\"\r\n                                readOnly // 읽기 전용\r\n                                disabled // 비활성화\r\n                            />\r\n                            {isPhoneVerified && <p className=\"green-text\">휴대폰 본인인증 완료 (자동 입력)</p>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {(verificationMethod === 'email' || form.email) && ( // 이메일 필드를 항상 보여주되, disabled로 처리\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">이메일</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                value={form.email}\r\n                                className=\"form-control\"\r\n                                readOnly // 읽기 전용\r\n                                disabled // 비활성화\r\n                            />\r\n                            {isEmailVerified && <p className=\"green-text\">이메일 본인인증 완료 (자동 입력)</p>}\r\n                        </div>\r\n                    )}\r\n                    \r\n                    {errors.general && <div className=\"error-msg\">{errors.general}</div>}\r\n\r\n                    <button type=\"submit\">회원가입</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignupPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}